#include<iostream>
#include<GL/gl.h>
#include<GL/glut.h>
#include<math.h>

using namespace std;

float x1,x2,z1,z2,m,dx,dy;

void display(){
	glClear(GL_COLOR_BUFFER_BIT);
	
	
glBegin(GL_POINTS);
	
	while (x1<=x2 && z1<=z2){
		
		if (abs(m)<1){
			x1=round(x1+1);
			z1=round(z1+m);
			glVertex2f(x1,z1);
			cout<<x1<<","<<z1<<"\n"	;
		}
		else if(abs(m)>1){
			x1=round(x1+(1/m));
			z1=round(z1+1);
			glVertex2f(x1,z1);
			cout<<x1<<","<<z1<<"\n"	;
		}
		else if(abs(m)==1){
			x1=round(x1+1);
			z1=round(z1+1);
			glVertex2f(x1,z1);
			cout<<x1<<","<<z1<<"\n"	;
		}
	} 
	   
	                
glEnd();


glFlush();     
                   
   
}
init(){

	glClearColor(0,1,0,0); //screen color
	glColor3f(1,0,0); //line color
	glMatrixMode(GL_PROJECTION);  
	glLoadIdentity();
	gluOrtho2D(0,640,0,480); 
	
}

main(int argc , char** argv){
	cout<<"Enter the 1st point (x1,y1):";
	cin>>x1>>z1;
	cout<<"Enter the 1st point (x2,y2):";
	cin>>x2>>z2;
	dx=x2-x1;
	dy=z2-z1;
	m=dy/dx;
	
	
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(640,480);
	glutInitWindowPosition(100,100);
	glutCreateWindow("DDA");
	init();
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;
	
}

